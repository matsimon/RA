RA Serie 3: Theorieteil
----------
Thomas Rickenbach
Mathieu Simon

Aufgabe 1
---------
- Die Maschine ist 16.67% langsamer. dies weil der Load-Befehl nun 15nsec
benötigt und dadurch die Gesamtzeit für alle Befehle 35 statt 30nsec
beträgt.
- Die CPU ist 8.33% schneller, weil die Gesamtzeit nun 27.5nsec statt 30nsec
beträgt. 

Aufgabe 2
--------


Aufgabe 3
---------
Zur Bestimmung des most significant bit ist die Implementierung einer
Overflow detection erforderlich.

Aufgabe 4
---------
Beim slt Befehl wird der Wert von rt von rs subtrahiert und dann überprüft
ob das Resultat kleiner als 0 ist. Falls dies der Fall ist, ergibt diese
Vergleichsoperation den Wert 1 und sonst 0.
... Unterstütung durch die ALU ... ?


Aufgabe 5
----------
pop:			push
addi, $sp, $sp, -4	lw $t0, 0($sp)
sw $t0,0($sp)		addi $sp, $sp1


Aufgabe 6
---------
Ist nicht möglich mit nur einem Befehl (32-Bit Konstante) -> Kein Platz
für den OpCode.

2nd Befehle:
	lui, $r1, c1
	ori, $r1, c2

C1:=Erste hälfte C2:=zweite Hälfte

Bsp: 0x0123abcd => 	lui  $r1, 0x123
			ori  $r1, R1, 0xabcd

Aufgabe 7
---------

		and	or	add	subtract	slt	nor

a invert	0	0	0	0	0	0	1
b invert	0	0	0	1	1	1	1

opcode		00	01	10	10	10	11	00

AND:
a AND b =1 <=>  a = b = 1. Müssen nicht negiert werden.

OR:
a OR b = 1  a=1 oder b=1, a und b bleiben unverändert.

ADD

SUBTRACT: a bleibt gleich, b wird nedigert. Dann werden der 

NOR:	-> de Morgan !(a OR b) = !a AND !b
	a und b werdne negiert, dann wird ein AND ausgeführt
